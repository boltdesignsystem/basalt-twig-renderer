{"version":3,"file":"twig-renderer.js","sources":["../src/utils.js","../src/twig-renderer.js"],"sourcesContent":["import { join, relative } from 'path';\nimport fs from 'fs-extra';\n\n/**\n * Formats Schema validation errors for using with `console.error`\n * @param {Array} errors - Error to format\n * @returns {string} - Errors to show\n */\nexport function formatSchemaErrors(errors) {\n  if (errors.length === 0) return '';\n  const msgs = errors.map((e) => {\n    switch (e.keyword) {\n      case 'type':\n        return `Prop '${e.dataPath}' ${e.message}`;\n      case 'additionalProperties':\n        return `${e.message}: '${\n          e.params.additionalProperty\n        }' - add this to schema or remove`;\n      case 'enum':\n        return `Prop '${e.dataPath}' ${\n          e.message\n        }: ${e.params.allowedValues.join(', ')}`;\n      default:\n        return e.message;\n    }\n  }).map(error => `ðŸ›‘ ${error}`);\n  return msgs.join('\\n');\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive)\n * Using Math.round() will give you a non-uniform distribution!\n * @param {int} min - Lowest number\n * @param {int} max - Highest number\n * @returns {int} - A random number between the two\n */\nexport function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Is this path a directory?\n * @param {string} thePath - Path to check\n * @returns {boolean} - is it a directory?\n */\nexport const isDir = thePath => fs.statSync(thePath).isDirectory();\n\nfunction getAllSubFolders(dir) {\n  return fs.readdirSync(dir).reduce((files, file) => {\n    // if (file === 'node_modules') return [...files];\n    const name = join(dir, file);\n    return isDir(name) ? [...files, name, ...getAllSubFolders(name)] : [...files];\n  }, []);\n}\n\n/**\n * Find all files inside a dir, recursively.\n * Synchronous b/c this is used in constructor, which cannot be async.\n * @param {string} dir - Dir path string.\n * @param {string} relativeFrom - path it should be relative from. If not, returns absolute paths.\n * @return {string[]} - Array with all directory names that are inside the directory.\n */\nexport function getAllFolders(dir, relativeFrom = '') {\n  if (!isDir(dir)) {\n    console.error(`This path is not a directory: ${dir}`);\n  }\n  const folders = [dir, ...getAllSubFolders(dir)];\n  return relativeFrom ? folders.map(folder => relative(relativeFrom, folder)) : folders;\n}\n","import path from 'path';\nimport qs from 'querystring';\nimport fetch from 'node-fetch';\nimport sleep from 'sleep-promise';\nimport fs from 'fs-extra';\nimport execa from 'execa';\nimport getPort from 'get-port';\nimport Ajv from 'ajv';\nimport { formatSchemaErrors, getAllFolders } from './utils';\nimport configSchema from '../config.schema';\n\nconst ajv = new Ajv({\n  useDefaults: true,\n});\n\nconst validateSchemaAndAssignDefaults = ajv.compile(configSchema);\n\nconst serverStates = Object.freeze({\n  STOPPED: 'STOPPED',\n  STARTING: 'STARTING',\n  READY: 'READY',\n  STOPPING: 'STOPPING',\n});\n\nclass TwigRenderer {\n  /**\n   * @param {TwigRendererConfig} userConfig - User config\n   */\n  constructor(userConfig) {\n    try {\n      execa.shellSync('php --version');\n    } catch (err) {\n      console.error('Error: php cli required. ', err.message);\n      process.exit(1);\n    }\n\n    /** @type {Set<number>} */\n    this.portsUsed = new Set();\n    this.serverState = serverStates.STOPPED;\n    this.inProgressRequests = 0;\n    this.totalRequests = 0;\n    this.completedRequests = 0;\n    this.config = Object.assign({}, userConfig);\n    const isValid = validateSchemaAndAssignDefaults(this.config);\n    if (!isValid) {\n      const { errors } = validateSchemaAndAssignDefaults;\n      const msgs = [\n        'Error: Please check config passed into TwigRenderer.',\n        formatSchemaErrors(errors),\n      ].join('\\n');\n      console.error(msgs);\n      if (process.env.NODE_ENV === 'testing') {\n        process.exitCode = 1;\n      } else {\n        process.exit(1);\n      }\n      throw new Error(msgs);\n    }\n\n    if (this.config.relativeFrom) {\n      if (!fs.existsSync(this.config.relativeFrom)) {\n        const msg = `Uh oh, that file path does not exist: ${this.config.relativeFrom}`;\n        console.error(msg);\n        process.exitCode = 1;\n        throw new Error(msg);\n      }\n      this.config.relativeFrom = path.resolve(\n        process.cwd(),\n        this.config.relativeFrom,\n      );\n    } else {\n      this.config.relativeFrom = process.cwd();\n    }\n\n    if (this.config.alterTwigEnv) {\n      this.config.alterTwigEnv = this.config.alterTwigEnv.map((item) => {\n        const isAbsolute = path.isAbsolute(item.file);\n        return {\n          file: isAbsolute\n            ? item.file\n            : path.resolve(this.config.relativeFrom, item.file),\n          functions: item.functions,\n        };\n      });\n    }\n\n    this.config = TwigRenderer.processPaths(this.config);\n    // Writing this so `server--sync.php` can use\n    fs.writeFileSync(\n      path.join(__dirname, 'shared-config.json'),\n      JSON.stringify(this.config, null, '  '),\n    );\n  }\n\n  /**\n   * @param {object} config - this.config\n   * @returns {object} - config with checked and modified paths\n   */\n  static processPaths(config) {\n    function checkPaths(paths, { relativeFrom, recursive = false }) {\n      const thePaths = paths.map((thePath) => {\n        const fullPath = path.resolve(relativeFrom, thePath);\n        const relPath = path.relative(relativeFrom, fullPath);\n        if (!fs.existsSync(fullPath)) {\n          const msg = `This file path does not exist, but was used in config: ${thePath}`;\n          console.error(msg);\n          process.exitCode = 1;\n          throw new Error(msg);\n        }\n        return recursive ? getAllFolders(fullPath, relativeFrom) : relPath;\n      });\n      // Flattening arrays in case `recursive` was set\n      return [].concat(...thePaths);\n    }\n\n    const processedConfig = Object.assign({}, config);\n    const { relativeFrom } = processedConfig;\n    let { roots, namespaces } = processedConfig.src;\n\n    roots = checkPaths(roots, { relativeFrom });\n    if (namespaces) {\n      namespaces = namespaces.map(namespace => ({\n        id: namespace.id,\n        paths: checkPaths(namespace.paths, {\n          relativeFrom,\n          recursive: namespace.recursive,\n        }),\n      }));\n    }\n\n    processedConfig.relativeFrom = relativeFrom;\n    processedConfig.src.roots = roots;\n    if (namespaces) {\n      processedConfig.src.namespaces = namespaces;\n    }\n\n    return processedConfig;\n  }\n\n  /**\n   * Convert Legacy Namespaces Config\n   * The old format was an object with the keys being the namespace id and the value the config;\n   * the new format is an array of objects that are the exact same config,\n   * but the namespace id is the `id` property in the object.\n   * @param {object} namespaces - Namespaces config\n   * @return {object[]} - Format needed by `config.src.namespaces` (see `config.schema.json`)\n   */\n  static convertLegacyNamespacesConfig(namespaces) {\n    return Object.keys(namespaces).map((id) => {\n      const value = namespaces[id];\n      return Object.assign({ id }, value);\n    });\n  }\n\n  async getOpenPort() {\n    let portSelected = await getPort({\n      host: '127.0.0.1', // helps ensure the host being checked matches the PHP server being spun up\n    });\n\n    /* eslint-disable no-await-in-loop */\n    // pick another port if the one selected has already been taken\n    while (this.portsUsed.has(portSelected)) {\n      portSelected = await getPort({\n        host: '127.0.0.1', // helps ensure the host being checked matches the PHP server being spun up\n      });\n    }\n    /* eslint-enable no-await-in-loop */\n\n    // remember which ports have been assigned to avoid giving out the same port twice\n    this.portsUsed.add(portSelected);\n\n    return portSelected;\n  }\n\n  async init() {\n    if (this.serverState === serverStates.STARTING) {\n      // console.log('No need to re-init');\n      return this.serverState;\n    }\n\n    // try to handle situation when stopping the current instance but another request comes through\n    if (this.serverState === serverStates.STOPPING) {\n      // console.log('Server currently stopping -- trying to restart.');\n      this.serverState = serverStates.READY;\n      return this.serverState;\n    }\n\n    if (this.config.verbose) {\n      // console.log('Initializing PHP Server...');\n    }\n    this.serverState = serverStates.STARTING;\n\n    this.phpServerPort = await this.getOpenPort();\n    this.phpServerUrl = `http://127.0.0.1:${this.phpServerPort}`;\n\n    // @todo Pass config to PHP server a better way than writing JSON file, then reading in PHP\n    const sharedConfigPath = path.join(\n      __dirname,\n      `shared-config--${this.phpServerPort}.json`,\n    );\n    await fs.writeFile(\n      sharedConfigPath,\n      JSON.stringify(this.config, null, '  '),\n    );\n\n    const phpMemoryLimit = '4048M'; // @todo make user configurable\n    const params = [\n      '-d',\n      `memory_limit=${phpMemoryLimit}`,\n      path.join(__dirname, 'server--async.php'),\n      this.phpServerPort,\n      sharedConfigPath,\n    ];\n\n    this.phpServer = execa('php', params, {\n      cleanup: true,\n      detached: false,\n    });\n\n    // the PHP close event appears to happen first, THEN the exit event\n    this.phpServer.on('close', async () => {\n      // console.log(`Server ${this.phpServerPort} event: 'close'`);\n      this.serverState = serverStates.STOPPING;\n    });\n\n    this.phpServer.on('exit', async () => {\n      // console.log(`Server ${this.phpServerPort} event: 'exit'`);\n      await fs.unlink(sharedConfigPath);\n      this.serverState = serverStates.STOPPED;\n    });\n\n    this.phpServer.on('disconnect', () => {\n      // console.log(`Server ${this.phpServerPort} event: 'disconnect'`);\n    });\n\n    this.phpServer.on('error', () => {\n      // console.log(`Server ${this.phpServerPort} event: 'error'`);\n    });\n\n    // @todo wrap this in config for seeing it besides `verbose` - too noisy\n    this.phpServer.stdout.pipe(process.stdout);\n    this.phpServer.stderr.pipe(process.stderr);\n\n    if (this.config.verbose) {\n      // console.log(`TwigRender js init complete. PHP server started on port ${port}`);\n    }\n    await this.checkServerWhileStarting();\n    return this.serverState;\n  }\n\n  stop() {\n    // console.log(`stopping server with port ${this.phpServerPort}`);\n    this.serverState = serverStates.STOPPED;\n    this.phpServer.kill();\n    // â†“ not 100% sure if we need this w/ execa; other exec examples seem to do this for cleanup\n    this.phpServer.removeAllListeners();\n  }\n\n  async closeServer() {\n    // console.log('checking if we can stop the server...');\n    if (this.config.keepAlive === false) {\n      if (\n        this.completedRequests === this.totalRequests\n        && this.inProgressRequests === 0\n        && (this.serverState !== serverStates.STOPPING\n          || this.serverState !== serverStates.STOPPED)\n      ) {\n        this.stop();\n      } else {\n        setTimeout(() => {\n          if (\n            this.completedRequests === this.totalRequests\n            && this.inProgressRequests === 0\n          ) {\n            this.stop();\n          }\n        }, 300);\n      }\n    }\n  }\n\n  /**\n   * Is PHP sever ready to render?\n   * @returns {boolean} - is ready\n   */\n  async checkIfServerIsReady() {\n    if (this.config.verbose) {\n      // console.log(`Checking Server ${this.phpServerPort} was ${this.serverState}`);\n    }\n    try {\n      const res = await fetch(this.phpServerUrl);\n      const { ok } = res;\n      if (ok) {\n        this.serverState = serverStates.READY;\n      }\n      if (this.config.verbose) {\n        // console.log(`Server ${this.phpServerPort} is ${this.serverState}`);\n      }\n      return ok;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  async checkServerWhileStarting() {\n    while (this.serverState === serverStates.STARTING) {\n      // console.log(`checkServerWhileStarting: ${this.serverState}`);\n      await this.checkIfServerIsReady();\n      await sleep(100);\n    }\n    return this.serverState;\n  }\n\n  getServerState() {\n    return this.serverState;\n  }\n\n  /**\n   * Render Twig Template\n   * @param {string} template - Template path\n   * @param {object} data - Data to pass to template\n   * @returns {Promise<{ok: boolean, html: string, message: string}>} - Render results\n   */\n  async render(template, data = {}) {\n    const result = await this.request('renderFile', {\n      template,\n      data,\n    });\n    this.closeServer(); // try to cleanup the current server instance before returning results\n    return result;\n  }\n\n  /**\n   * Render Twig String\n   * @param {string} template - inlined Twig template\n   * @param {object} data - Data to pass to template\n   * @returns {Promise<{ok: boolean, html: string, message: string}>}  - Render results\n   */\n  async renderString(template, data = {}) {\n    const result = await this.request('renderString', {\n      template,\n      data,\n    });\n    this.closeServer(); // try to cleanup the current server instance before returning results\n    return result;\n  }\n\n  async getMeta() {\n    return this.request('meta');\n  }\n\n  async request(type, body = {}) {\n    this.totalRequests += 1;\n    if (this.serverState === serverStates.STOPPED) {\n      await this.init();\n    }\n\n    while (this.serverState !== serverStates.READY) {\n      await sleep(250);\n    }\n\n    while (this.inProgressRequests > this.config.maxConcurrency) {\n      await sleep(250);\n    }\n\n    if (this.config.verbose) {\n      console.log(\n        `About to render & server on port ${this.phpServerPort} is ${this.serverState}`,\n      );\n    }\n\n    const attempts = 3;\n    let attempt = 0;\n    let results;\n\n    while (attempt < attempts) {\n      try {\n        this.inProgressRequests += 1;\n        const requestUrl = `${this.phpServerUrl}?${qs.stringify({\n          type,\n        })}`;\n\n        // @todo Fail if no response after X seconds\n        const res = await fetch(requestUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body),\n        });\n\n        const { status, headers, ok } = res;\n        const contentType = headers.get('Content-Type');\n        const warning = headers.get('Warning');\n\n        if (contentType === 'application/json') {\n          results = await res.json();\n        } else {\n          results = {\n            ok,\n            message: warning,\n            html: await res.text(),\n          };\n        }\n        this.inProgressRequests -= 1;\n        this.completedRequests += 1;\n\n        if (this.config.verbose) {\n          // console.log('vvvvvvvvvvvvvvv');\n          console.log(\n            `Render request received: Ok: ${\n              ok ? 'true' : 'false'\n            }, Status Code: ${status}, type: ${type}. ${\n              body.template ? `template: ${body.template}` : ''\n            }`,\n          );\n          if (warning) {\n            console.warn('Warning: ', warning);\n          }\n          // console.log(results);\n          // console.log(`End: ${templatePath}`);\n          // console.log('^^^^^^^^^^^^^^^^');\n          // console.log();\n        }\n        break;\n      } catch (e) {\n        results = {\n          ok: false,\n          message: e.message,\n        };\n        attempt += 1;\n        this.inProgressRequests -= 1;\n      }\n    }\n    return results;\n  }\n}\n\nexport default TwigRenderer;\n"],"names":["formatSchemaErrors","errors","length","msgs","map","e","keyword","dataPath","message","params","additionalProperty","allowedValues","join","error","isDir","thePath","fs","statSync","isDirectory","getAllSubFolders","dir","readdirSync","reduce","files","file","name","getAllFolders","relativeFrom","console","folders","folder","relative","ajv","Ajv","useDefaults","validateSchemaAndAssignDefaults","compile","configSchema","serverStates","Object","freeze","STOPPED","STARTING","READY","STOPPING","TwigRenderer","constructor","userConfig","execa","shellSync","err","process","exit","portsUsed","Set","serverState","inProgressRequests","totalRequests","completedRequests","config","assign","isValid","env","NODE_ENV","exitCode","Error","existsSync","msg","path","resolve","cwd","alterTwigEnv","item","isAbsolute","functions","processPaths","writeFileSync","__dirname","JSON","stringify","checkPaths","paths","recursive","thePaths","fullPath","relPath","concat","processedConfig","roots","namespaces","src","namespace","id","convertLegacyNamespacesConfig","keys","value","getOpenPort","portSelected","getPort","host","has","add","init","verbose","phpServerPort","phpServerUrl","sharedConfigPath","writeFile","phpMemoryLimit","phpServer","cleanup","detached","on","unlink","stdout","pipe","stderr","checkServerWhileStarting","stop","kill","removeAllListeners","closeServer","keepAlive","setTimeout","checkIfServerIsReady","res","fetch","ok","sleep","getServerState","render","template","data","result","request","renderString","getMeta","type","body","maxConcurrency","log","attempts","attempt","results","requestUrl","qs","method","headers","status","contentType","get","warning","json","html","text","warn"],"mappings":"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"}